@page "/iotcomponents/data/{Id:int}"
@using Microsoft.Extensions.Localization
@using Syncfusion.Blazor.Charts
@inherits BaseGrowComponent
@attribute [Authorize]
@inject IStringLocalizer<AppResources> Localizer

<div class="container">
    <div class="row">
        <div class="col">
            <h1>@Localizer["Component data"]</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><NavLink href="/">@Localizer["Home"]</NavLink></li>
                    <li class="breadcrumb-item"><NavLink href="/iotcomponents">@Localizer["Components"]</NavLink></li>
                    <li class="breadcrumb-item active" aria-current="page">@Localizer["Component data"]</li>
                </ol>
            </nav>
            <div class="card mt-4">
                <div class="card-body">
                    @if (IsLoading)
                    {
                        <div class="spinner-border mx-auto d-block" role="status">
                            <span class="sr-only">@Localizer["Loading"]...</span>
                        </div>
                    }
                    <div class="row">
                        <div class="col-12 text-center ">
                            <h3>@Localizer["Real-time data"]</h3>
                            <div class="d-flex flex-column justify-content-center align-content-center">
                                <SfChart @ref="HistoryChart"
                                         Width="100%"
                                         Height="450px">
                                    <ChartPrimaryXAxis Title="Time"
                                                       ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" />
                                    <ChartPrimaryYAxis ValueType="@YAxisType"
                                                       Maximum="@Maximum"
                                                       Minimum="@Minimum" />

                                    <ChartTooltipSettings Enable="true" Format="${series.name} ${point.x} : ${point.y} ">
                                    </ChartTooltipSettings>

                                    <ChartSeriesCollection>
                                        @if (Module != null)
                                        {
                                            switch (Module.Type)
                                            {
                                                case FourTwenty.IoT.Connect.Constants.ModuleType.Temperature:
                                                case FourTwenty.IoT.Connect.Constants.ModuleType.HumidityAndTemperature:
                                                    <ChartSeries XName="Date" YName="Humidity" PointColorMapping="HumidityColor" Fill="#0277BD" Type="@ChartType" DataSource="@TemperatureHistoryData">
                                                        <ChartSeriesAnimation Enable="false" />
                                                        <ChartMarker Visible="true">
                                                            <ChartDataLabel Visible="true" Name="HumidityText" />
                                                        </ChartMarker>
                                                    </ChartSeries>
                                                    <ChartSeries XName="Date" YName="Temperature" PointColorMapping="TemperatureColor" Fill="#F57C00" Type="@ChartType" DataSource="@TemperatureHistoryData">
                                                        <ChartSeriesAnimation Enable="false" />
                                                        <ChartMarker Visible="true">
                                                            <ChartDataLabel Visible="true" Name="TemperatureText" />
                                                        </ChartMarker>
                                                    </ChartSeries>
                                                    break;
                                                case FourTwenty.IoT.Connect.Constants.ModuleType.Relay:
                                                    foreach(var pin in Module.Pins)
                                                    {
                                                        <ChartSeries XName="Date" YName="Pin" PointColorMapping="StateColor" Type="@ChartType" DataSource="@HistoryData[pin]">
                                                            <ChartSeriesAnimation Enable="false" />
                                                            <ChartMarker Visible="true">
                                                                <ChartDataLabel Visible="true" Name="Description" />
                                                            </ChartMarker>
                                                        </ChartSeries>
                                                    }
                                                    break;
                                            }
                                        }
                                    </ChartSeriesCollection>
                                </SfChart>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

